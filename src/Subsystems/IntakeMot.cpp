// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "IntakeMot.h"
#include "../RobotMap.h"
bool IntakeMot::running=false;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

IntakeMot::IntakeMot() : Subsystem("IntakeMot") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    intakeM1 = RobotMap::intakeMotIntakeM1;
    intakeM2 = RobotMap::intakeMotIntakeM2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void IntakeMot::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void IntakeMot::Switch(){
	if(IntakeMot::running){
		intakeM1->Set(0);
		intakeM2->Set(0);
		IntakeMot::running= false;
		RobotMap::shooterSubsystemaugerMotor->Set(0);
	}
	else{
		intakeM1->Set(1);
		intakeM2->Set(1);
		IntakeMot::running = true;
		RobotMap::shooterSubsystemaugerMotor->Set(.5);
	}
}

void IntakeMot::Bump(double speed) {
	intakeM1->Set(speed);
	intakeM2->Set(speed);
}
